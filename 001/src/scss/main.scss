// =============================================================================================
// DOCS
// =============================================================================================
//
// .l-: layouts
// .o-: objects
// .c-: components
// .js: JavaScript hooks
// .is-|.has-: state classes
// .t1|.s1: typography sizes
// .u-: utility classes
//
// LAYOUTS
// separation of skin and structure. In other words, properties that affect
// the position of a block or its elements should be abstracted into a separate
// class for reusability.
//
// OBJECTS
// Objects uses the .o- prefix
// They cannot contain other objects or components.
// They are context independent.
// Certain objects can ignore the .o- prefix when it makes sense.
//
// COMPONENTS
// Components uses a .c- prefix.
// Components can contain other objects and components.
// Components are context aware.
//
// STATES
// State classes indicate the current state of the object/component.
// When a state class is applied, you immediately know if an object/component
// has a dropdown (.has-dropdown) or is currently in the opened state (.is-open).
//
// TYPOGRAPHY
// .t1 - largest font-size.
// .t2 - second largest font-size.
// .t3 - third largest font-size.
// .s1 - first font-size smaller that base font-size.
// .s2 - second font-size smaller that base font-size.
// ...and so on
//
// UTILITY
// Utility classes are helper classes that perform one thing extremely well.
// They do it so well, they override everything else. As such, they often only
// contain one property, and they include the !important declaration.
//
// =============================================================================================
// END OF DOCS
// =============================================================================================

// =============================================================================================
// DEFAULTS
// =============================================================================================
@import "normalize";
@import "fonts";
@import "variables";
@import "mixins";
@import "global";
@import "typography";
@import "grid";
@import "layout";
@import "utility";
// =============================================================================================
// END OF DEFAULTS
// =============================================================================================

// =============================================================================================
// COMPONENTS
// =============================================================================================
// import all your components here
// =============================================================================================
// END OF COMPONENTS
// =============================================================================================

// =============================================================================================
// OBJECTS
// =============================================================================================
// import all your object here
// =============================================================================================
// END OF OBJECTS
// =============================================================================================
